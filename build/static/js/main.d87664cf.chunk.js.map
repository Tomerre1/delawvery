{"version":3,"sources":["services/util.service.js","cmps/Order/OrderPreview.jsx","cmps/Order/OrderList.jsx","cmps/OrderAddEdit.jsx","services/async-storage.service.js","services/order.service.js","routes.js","pages/AppPage.jsx","assets/img/DeLawVeryLogo.svg","cmps/AppHeader.jsx","root-cmp.jsx","index.js"],"names":["utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","makeDate","date","currentDate","Date","toLocaleString","year","month","day","OrderPreview","orderToEdit","order","onRemoveOrder","setEditOrder","className","_id","onClick","Close","name","description","firstName","lastName","OrderList","orders","map","OrderAddEdit","onEditOrder","onAddOrder","useState","now","selectedDate","setSelectedDate","setFirstName","setLastName","DatePickerCmp","styled","DatePicker","borderColor","cursor","borderRadius","position","fontSize","width","padding","transition","theme","transitions","create","useEffect","clearState","onSubmit","e","preventDefault","htmlFor","InputBase","placeholder","id","onChange","target","value","required","inputProps","disableAutoFocus","utils","DateFnsUtils","inputVariant","format","animateYearScrolling","autoOk","clearable","Button","variant","type","storageService","query","get","entityType","entityId","then","entities","find","entity","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","JSON","parse","localStorage","getItem","Promise","resolve","reject","setItem","stringify","text","STORAGE_KEY","orderService","save","orderId","routes","path","component","setOrders","setOrderToEdit","loadOrders","a","storageOrders","filter","updatedOrders","currOrder","isExact","AppHeader","to","src","logo","alt","RootCmp","route","exact","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87664cf.chunk.js","sourcesContent":["export const utilService = {\r\n    makeId,\r\n    makeDate,\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction makeDate(date) {\r\n    const currentDate = new Date(date)\r\n    const newDateOptions = {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\"\r\n    }\r\n    return currentDate.toLocaleString(\"en-GB\", newDateOptions);\r\n}\r\n\r\n","import { Close } from '@material-ui/icons'\nimport EditIcon from '@mui/icons-material/Edit';\nimport { utilService } from '../../services/util.service'\nexport const OrderPreview = ({ orderToEdit, order, onRemoveOrder, setEditOrder }) => {\n\n    return (\n        <div className=\"order-preview\">\n            <div className=\"order-actions\">\n                {(orderToEdit?._id !== order._id) && <EditIcon onClick={() => setEditOrder(order._id)} />}\n                <Close onClick={() => onRemoveOrder(order._id)} />\n            </div>\n            <h1>{`${order.name} ${order._id}`}</h1>\n            <p>{order.description}</p>\n            <p>{order.firstName} {order.lastName}</p>\n            <p>{utilService.makeDate(order.date)}</p>\n        </div>\n    )\n}","import React from 'react'\nimport { OrderPreview } from './OrderPreview'\n\nexport const OrderList = ({ orderToEdit, orders, onRemoveOrder, setEditOrder }) => {\n\n    return (\n        <div className=\"order-list flex column align-center\">\n            <div>\n                <h1>רשימת הזמנות</h1>\n                <p className=\"order-count flex space-between\">מספר הזמנות: <span>{orders?.length}</span></p>\n            </div>\n            {orders?.map((order) => <OrderPreview key={order._id} orderToEdit={orderToEdit} order={order} onRemoveOrder={onRemoveOrder} setEditOrder={setEditOrder} />)}\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@mui/material/Button';\n\nexport function OrderAddEdit({ onEditOrder, onAddOrder, order }) {\n\n    const [selectedDate, setSelectedDate] = useState(Date.now());\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const DatePickerCmp = styled(DatePicker)(({ theme }) => ({\n        '.MuiOutlinedInput-root: hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#000',\n        },\n        '& .MuiInputBase-input': {\n            cursor: 'pointer',\n            borderRadius: 4,\n            position: 'relative',\n            fontSize: 16,\n            width: '200px',\n            padding: '10px 12px',\n            borderColor: '#ced4da',\n            transition: theme.transitions.create([\n                'border-color',\n                'background-color',\n                'box-shadow',\n            ]),\n        },\n    }));\n\n    useEffect(() => {\n        setFirstName(order?.firstName || '')\n        setLastName(order?.lastName || '')\n        setSelectedDate(order?.date || Date.now())\n    }, [order])\n\n    const orderSubmit = (e) => {\n        if (!firstName || !lastName || !selectedDate) return\n        e.preventDefault();\n        (order) ? onEditOrder({ ...order, firstName, lastName, date: selectedDate })\n            : onAddOrder({\n                firstName, lastName, date: selectedDate, description: 'פרטים', name: 'הזמנה'\n            })\n        clearState()\n    }\n\n    const clearState = () => {\n        setFirstName('')\n        setLastName('')\n        setSelectedDate(Date.now())\n    }\n\n    return (\n        <div className=\"order-add \">\n            <h1>{(order?._id) ? order.name + ' ' + order._id : 'הזמנה חדשה'}</h1>\n            <form className=\"order-form flex column align-center\" onSubmit={orderSubmit}>\n\n                <div className=\"flex column\" >\n                    <label htmlFor=\"firstName\" className=\"label\" >\n                        שם פרטי\n                    </label>\n                    <InputBase\n                        placeholder=\"הכנס שם פרטי\"\n                        id=\"firstName\"\n                        onChange={(e) => { setFirstName(e.target.value) }}\n                        value={firstName}\n                        required\n                        inputProps={{ className: 'input' }}\n                    />\n                </div>\n\n                <div className=\"flex column\">\n                    <label htmlFor=\"lastName\" className=\"label\" >\n                        שם משפחה\n                    </label>\n                    <InputBase\n                        placeholder=\"הכנס שם משפחה\"\n                        id=\"lastName\"\n                        onChange={(e) => setLastName(e.target.value)}\n                        value={lastName}\n                        disableAutoFocus={true}\n                        required\n                        inputProps={{ className: 'input' }}\n\n                    />\n                </div>\n\n                <div className=\"flex column\">\n                    <label htmlFor=\"date\" className=\"label\" >\n                        תאריך\n                    </label>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                        <DatePickerCmp\n                            id=\"date\"\n                            inputVariant=\"outlined\"\n                            placeholder=\"הכנס תאריך\"\n                            format={\"dd/MM/yyyy\"}\n                            value={selectedDate}\n                            onChange={setSelectedDate}\n                            animateYearScrolling={false}\n                            autoOk={false}\n                            clearable\n                            required\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n\n\n                <Button\n                    variant=\"contained\"\n                    className=\"order-submit\"\n                    type=\"submit\"\n                >\n                    {order?._id ? 'עדכן הזמנה' : 'הוסף הזמנה'}\n                </Button>\n\n            </form>\n\n        </div>\n    )\n}\n","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany\r\n}\r\n\r\nfunction query(entityType, delay = 0) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n\r\n    return new Promise((resolve, reject) => {\r\n        resolve(entities)\r\n    })\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\nfunction post(entityType, newEntity) {\r\n    if (!newEntity._id)\r\n        newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({ ...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}","\r\nimport { storageService } from './async-storage.service'\r\nimport { utilService } from './util.service'\r\n\r\nconst STORAGE_KEY = 'order'\r\n\r\nexport const orderService = {\r\n    query,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\n\r\nfunction save(order) {\r\n    if (order._id) {\r\n        // update\r\n        return storageService.put(STORAGE_KEY, order)\r\n    } else {\r\n        // create\r\n        order._id = utilService.makeId()\r\n        return storageService.post(STORAGE_KEY, order)\r\n    }\r\n}\r\n\r\n\r\nfunction remove(orderId) {\r\n    return storageService.remove(STORAGE_KEY, orderId)\r\n}\r\n\r\n","import { AppPage } from './pages/AppPage'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: AppPage,\r\n        isExact: true\r\n    },\r\n]\r\n\r\nexport default routes;","import { useState, useEffect } from 'react'\nimport { OrderList } from '../cmps/Order/OrderList'\nimport { OrderAddEdit } from '../cmps/OrderAddEdit'\nimport { orderService } from '../services/order.service'\n\nexport function AppPage() {\n    const [orders, setOrders] = useState([])\n    const [orderToEdit, setOrderToEdit] = useState(null)\n\n    useEffect(() => {\n        loadOrders()\n    }, []);\n\n    const loadOrders = async () => {\n        const storageOrders = await orderService.query()\n        setOrders(storageOrders)\n    }\n\n    const setEditOrder = async (orderId) => {\n        const orderToEdit = orders.find(order => order._id === orderId)\n        setOrderToEdit(orderToEdit)\n    }\n\n    const onAddOrder = async (order) => {\n        // Working with optimistic method first ui update and then server update\n        setOrders([...orders, order])\n        await orderService.save(order)\n    }\n\n    const onRemoveOrder = async (orderId) => {\n        // Working with optimistic method first ui update and then server update\n        setOrders(orders.filter(order => order._id !== orderId))\n        await orderService.remove(orderId)\n    }\n\n    const onEditOrder = async (order) => {\n        // Working with optimistic method first ui update and then server update\n        setOrderToEdit(null)\n        const updatedOrders = orders.map(currOrder => (currOrder._id === order._id) ? order : currOrder)\n        setOrders(updatedOrders)\n        await orderService.save(order)\n    }\n\n    return (\n        <main className=\"app-page\">\n            <OrderList orderToEdit={orderToEdit} orders={orders} onRemoveOrder={onRemoveOrder} setEditOrder={setEditOrder} />\n            <OrderAddEdit order={orderToEdit} onAddOrder={onAddOrder} onEditOrder={onEditOrder} />\n        </main>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/DeLawVeryLogo.8de1632b.svg\";","import { NavLink } from \"react-router-dom\";\nimport logo from '../assets/img/DeLawVeryLogo.svg'\nexport const AppHeader = () => {\n    return (\n        <header className=\"app-header flex align-center justify-center\">\n            <NavLink to=\"/\">\n                <img className=\"logo\" src={logo} alt=\"company logo\" />\n            </NavLink>\n        </header>\n    )\n}\n","import React from 'react'\r\nimport { Route } from 'react-router'\r\nimport routes from './routes'\r\nimport { AppHeader } from './cmps/AppHeader'\r\n\r\nexport class RootCmp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppHeader />\r\n                <main>\r\n                    {routes.map(route => <Route key={route.path} exact={route.isExact} component={route.component} path={route.path} />)}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { RootCmp } from './root-cmp';\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <RootCmp />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}